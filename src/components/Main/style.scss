$maxWidth: 1920;
$maxWidthContainer: 1600;

@mixin font($font_name, $file_name, $weight, $style) {
    @font-face {
        font-family: $font_name;
        font-display: swap;
        src: url("../fonts/#{$file_name}.woff") format("woff"), url("../fonts/#{$file_name}.woff2") format("woff2");
        font-weight: #{$weight};
        font-style: #{$style};
    }
}
@mixin adaptive-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if $type==1 {
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer+px}) {
            #{$property}: calc(#{$minSize+px} + #{$addSize} * ((100vw - 320px) /#{$maxWidthContainer - 320}));
        }
    } @else if $type==2 {
        #{$property}: calc(#{$minSize+px} + #{$addSize} * ((100vw - 320px) /#{$maxWidth - 320}));
    } @else {
        #{$property}: calc(#{$minSize+px} + (#{$addSize}) * (((100vw - 320px) / #{$maxWidth - 320})));
    }
}

body {
    font-family: "Roboto", sans-serif;
    font-style: normal;
    margin: 0px 0px 0px 0px;
}
body.lock {
    overflow-y: hidden;
}
@function rem($value) {
    $remValue: ($value / 16) + rem;
    @return $remValue;
}
.container {
    width: 100%;
    max-width: rem(1600);
    margin: 0 auto;
}
//BUTTONS//
.btn_type_dark {
    background: #524983;
}
.btn_type_light {
    background: #309f85;
    color: white;
}
.btn_type_inactive {
    background: #c4c4c4;
    cursor: not-allowed;
}
.btn {
    padding: rem(18) rem(51) rem(18) rem(41);
    cursor: pointer;
    border: none;
    outline: none;
    border-radius: rem(60);
}
.btn:hover {
    font-size: rem(18);
    transform: scale(1.05);
    transition: all 0.1s;
}
.btn.btn_type_light:disabled {
    background: #c4c4c4;
}
.form__btn:disabled {
    background: #c4c4c4;
}
.btn:disabled:hover {
    background: #c4c4c4;
}
@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap);
